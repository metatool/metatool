{
  "CtrlCExit": false,
  "Hotkeys": {
    "Exit": "MT + C",
    "Restart": "MT + X",
    "RestartAsAdmin": "MT + Z"
  },
  "Services": {
    "Input": {
      "Keyboard": {
        "Hotkeys": {
          "Reset": "MT + R" 
        },
        "KeyAliases": {
          "`": "Tilde",
          "0": "D0",
          "1": "D1",
          "2": "D2",
          "3": "D3",
          "4": "D4",
          "5": "D5",
          "6": "D6",
          "7": "D7",
          "8": "D8",
          "9": "D9",
          "-": "Minus",
          "=": "Plus",
          "[": "OpenBrackets",
          "]": "CloseBrackets",
          "\\": "Pipe",
          ";": "SemiColon",
          "'": "Quotes",
          //",": "Comma", is handled internally
          ".": "Period",
          "/": "Slash",
          "MT": "Ctrl + Caps|Enter" // metatool key
        },
        "RepeatDelay": 2000
      }
    },
    "Logging": {
      // https://github.com/adams85/filelogger
      "File": {
        "Enabled": true,
        "BasePath": "Logs",
        "FileAccessMode": "KeepOpenAndAutoFlush",
        "FileEncodingName": "utf-8",
        "DateFormat": "yyyyMMdd",
        "CounterFormat": "000",
        "MaxFileSize": 10485760,
        //"TextBuilderType": "MyApp.CustomLogEntryTextBuilder, MyApp",
        // first-level filters
        "LogLevel": {
          "MyApp": "Information",
          "Default": "Debug" // first-level filters can loosen the levels specified by the global filters
        },
        "IncludeScopes": true,
        "MaxQueueSize": 100,
        "Files": [
          {
            "Path": "default-<counter>.log" // "default-000.log"
          },
          {
            "Path": "<date:yyyy>/<date:MM>/metatool-<counter>.log", // "2019/08/metatool-00.log"
            "MinLevel": { // second-level filters
              "Metatool.Input.MouseKeyHook.Implementation.KeyListener":
                "Information", // use Debug if want to log the key typing events
              "Default":
                "Trace" // this has no effect as second-level filters can only be more restrictive than first-level filters!
            },
            "CounterFormat": "00"
          }
        ]
      },
      "Console": {
        "IncludeScopes": false
      },
      // global filter settings
      "LogLevel": {
        "Default": "debug"
      }
    }
  }
}